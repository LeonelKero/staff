services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    hostname: sqlserver
    environment:
      # Required environment variables
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong@Passw0rd"
      MSSQL_PID: "Express"  # Options: Express, Developer, Standard, Enterprise

      # Optional environment variables
      MSSQL_LCID: "1033"           # Language/Locale ID (1033 = English US)
      MSSQL_COLLATION: "SQL_Latin1_General_CP1_CI_AS"
      MSSQL_MEMORY_LIMIT_MB: "2048"  # Memory limit in MB
      MSSQL_TCP_PORT: "1433"       # TCP port (default is 1433)
      MSSQL_AGENT_ENABLED: "true"  # Enable SQL Server Agent
    ports:
      - "1433:1433"
    volumes:
      # Persist data
      - sqlserver_data:/var/opt/mssql
      # Optional: Mount initialization scripts
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - sqlserver_network
    restart: unless-stopped
    # Optional: Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Optional: SQL Server Management Studio alternative (Azure Data Studio in container)
  # You can also use a web-based SQL client
  adminer:
    image: adminer
    container_name: sqlserver_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: sqlserver
    depends_on:
      - sqlserver
    networks:
      - sqlserver_network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  sqlserver_network:
    driver: bridge